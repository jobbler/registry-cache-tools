
cache_files() {
    # Usage: cache_files [-s] bits_version
    # Options: [-s] - Run sudo when creating the web directory and setting permissions

    # Requires: cache_www_dir, file_owner, file_group
    #           installer, installer_json_url
    #           local_repo, local_registry, pullsecret_file
    #           ga_url, nightly_url
    # Returns: nothing

    local ga_url=https://mirror.openshift.com/pub/openshift-v4/clients/ocp/
    local nightly_url=https://openshift-release-artifacts.svc.ci.openshift.org/
#    local nightly_url=https://mirror.openshift.com/pub/openshift-v4/clients/ocp-dev-preview/

    local OPTIND options
    local www_dir url
    local owner group
    local cmd repo registry pullsecret
    local json_url j_url
    local release release_image commit_id
    local rhcos_uri rhcos_qemu_uri rhcos_osp_uri 

    ## Parse options
    while getopts ":sp:w:o:g:c:m:r:u:" options
    do
        case "${options}" in
            s)  # Run Sudo when making directory
                issudo=true
                ;;
            p)  # file that contains the pull secret
                pullsecret=${OPTARG}
                ;;
            w)  # www directory to place the directory and files into
                www_dir=${OPTARG}
                ;;
            o)  # owner for the directories and files that are created
                owner=${OPTARG}
                ;;
            g)  # group for the directories and files that are created
                # defaults to owner
                group=${OPTARG}
                ;;
            c)  # command for the --command option to the oc command
                #   to extract the installer
                cmd=${OPTARG}
                ;;
            m)  # local mirrored registry and port
                registry=${OPTARG}
                ;;
            r)  # repository on local mirrored registry to place images into
                repo=${OPTARG}
                ;;
            u)  # alternate url for the rhcos.json file
                json_url=${OPTARG}
                ;;
        esac
    done

    shift $(($OPTIND - 1))

    bits=$1

    ## Set defaults
    : ${pullsecret:=~/pull-secret.json}
    : ${www_dir:=/opt/cache}
    : ${owner:=$USER}
    : ${group:=$owner}
    : ${cmd:=openshift-baremetal-install}
    : ${repo:=ocp}
    : ${registry:=127.0.0.1:5000}
    : ${json_url:=https://raw.githubusercontent.com/openshift/installer/::commitid::/data/data/rhcos.json}

    [[ $bits =~ nightly ]] \
        && url=${nightly_url} \
        || url=${ga_url}



    ## Main
    [[ -n ${bits+isset} ]] \
    && {
        [[ -d ${www_dir}/${bits} ]] && {
#            rm -rf ${www_dir}/${bits}
            printf "Not pulling bits %s. Bit directory exists: %s\n" "${bits}" "${www_dir}/${bits}"
            return 0
        }

        [[ -n ${issudo+isset} ]] \
        && {
            sudo mkdir -p ${www_dir}/${bits}
            sudo chown --recursive ${owner}.${group} ${www_dir}
            sudo chmod --recursive 777 ${www_dir}
        } || {
            mkdir -p ${www_dir}/${bits}
            chown --recursive ${owner}.${group} ${www_dir}
            chmod --recursive 777 ${www_dir}
        }

        wget -O ${www_dir}/${bits}/release.txt ${url}/${bits}/release.txt

        release=`cat ${www_dir}/${bits}/release.txt | grep Name | awk {'print $2'}`
        release_image=$( sed -n '/^Pull From:/ s/^.*: //p' ${www_dir}/${bits}/release.txt )

        wget -O ${www_dir}/${bits}/openshift-client-linux-${release}.tar.gz ${url}/${bits}/openshift-client-linux-${release}.tar.gz

        tar xf ${www_dir}/${bits}/openshift-client-linux-${release}.tar.gz \
            --directory ${www_dir}/${bits} oc

        mirror_repo -c ${www_dir}/${bits}/oc -p ${pullsecret} -u ${release_image} -l ${repo} -r ${registry} ${release}

        ${www_dir}/${bits}/oc adm release extract \
            --registry-config "${pullsecret}" \
            --command="${cmd}" \
            --to ${www_dir}/${bits} \
            ${registry}/${repo}:${release}

        commit_id=$( ${www_dir}/${bits}/openshift-baremetal-install version | sed -n 's/^built from commit //p' )
        j_url=$( echo ${json_url} | sed -e "s/::commitid::/${commit_id}/" )
        wget -O ${www_dir}/${bits}/rhcos.json ${j_url}


        rhcos_qemu_uri=$( jq --raw-output .images.qemu.path ${www_dir}/${bits}/rhcos.json )
        rhcos_osp_uri=$( jq --raw-output .images.openstack.path ${www_dir}/${bits}/rhcos.json )
        rhcos_uri=$( jq --raw-output .baseURI ${www_dir}/${bits}/rhcos.json )

        [[ ! -e ${www_dir}/${rhcos_qemu_uri} ]] \
        && {
            wget -O ${www_dir}/${rhcos_qemu_uri} ${rhcos_uri}/${rhcos_qemu_uri} \
                && echo ${www_dir}/${rhcos_qemu_uri}
        }

        [[ ! -e ${www_dir}/${rhcos_osp_uri} ]] \
        && {
            wget -O ${www_dir}/${rhcos_osp_uri} ${rhcos_uri}/${rhcos_osp_uri} \
                && echo ${www_dir}/${rhcos_osp_uri}
        }

        [[ -n ${issudo+isset} ]] \
        && {
            sudo chown --recursive ${owner}.${group} ${www_dir}
            sudo chmod --recursive 777 ${www_dir}
        } || {
            chown --recursive ${owner}.${group} ${www_dir}
            chmod --recursive 777 ${www_dir}
        }
    }
}
